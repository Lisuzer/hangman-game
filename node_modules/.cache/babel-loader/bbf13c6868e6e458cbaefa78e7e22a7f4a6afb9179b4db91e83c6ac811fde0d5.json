{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m3806\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\300\\u043A \\u0432 \\u043D\\u0430\\u043D\\u043E\\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\\u0443\\\\\\u0412\\u0438\\u0441\\u0435\\u043B\\u0438\\u0446\\u0430\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport words from \"./data/words\";\nimport Alphabet from \"./components/Alphabet\";\nimport WordByLetter from \"./components/WordByLetter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  const id = getRandomInt(words.length);\n  const newWord = words[id].split(\"\");\n  const [word, setWord] = useState(newWord);\n  const startArr = new Array(word.length).fill(\" \");\n  const [arr, setArr] = useState(startArr);\n  const searchLetter = (word, searchedLetter) => {\n    // for (let i = 0; i < word.length; i++) {\n    //     if (word[i] === searchedLetter) {\n    //         startArr[i] = searchedLetter;\n    //     }\n    // }\n\n    const myArr = word.map((el, index) => {\n      if (el === searchedLetter) {\n        startArr[index] = searchedLetter;\n      }\n    });\n    return myArr;\n  };\n  const result = searchLetter(word, \"a\");\n  const arrayHandler = () => {\n    setArr(searchLetter(word, \"a\"));\n  };\n  console.log(result);\n  console.log(startArr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gallows Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordByLetter, {\n      word: word,\n      letterArr: arr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Get new word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: arrayHandler,\n      children: \"Test click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alphabet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"u7ZBwziqarglaJPYoIM4wlAZhmo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","words","Alphabet","WordByLetter","jsxDEV","_jsxDEV","App","_s","getRandomInt","max","Math","floor","random","id","length","newWord","split","word","setWord","startArr","Array","fill","arr","setArr","searchLetter","searchedLetter","myArr","map","el","index","result","arrayHandler","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","letterArr","onClick","_c","$RefreshReg$"],"sources":["C:/Users/m3806/OneDrive/Документы/300к в наносекунду/Виселица/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport words from \"./data/words\";\nimport Alphabet from \"./components/Alphabet\";\nimport WordByLetter from \"./components/WordByLetter\";\n\nfunction App() {\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n    const id = getRandomInt(words.length);\n    const newWord = words[id].split(\"\");\n\n    const [word, setWord] = useState(newWord);\n\n    const startArr = new Array(word.length).fill(\" \");\n\n    const [arr, setArr] = useState(startArr);\n\n    const searchLetter = (word, searchedLetter) => {\n        // for (let i = 0; i < word.length; i++) {\n        //     if (word[i] === searchedLetter) {\n        //         startArr[i] = searchedLetter;\n        //     }\n        // }\n\n        const myArr = word.map((el, index) => {\n            if (el === searchedLetter) {\n                startArr[index] = searchedLetter;\n            }\n        });\n        return myArr;\n    };\n\n    const result = searchLetter(word, \"a\");\n    const arrayHandler = () => {\n        setArr(searchLetter(word, \"a\"));\n    };\n    console.log(result);\n    console.log(startArr);\n\n    return (\n        <div className=\"App\">\n            <h1>Gallows Game</h1>\n            <div className=\"img-box\"></div>\n            <WordByLetter word={word} letterArr={arr} />\n            <button>Get new word</button>\n            <button onClick={arrayHandler}>Test click</button>\n            <Alphabet />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,SAASC,YAAYA,CAACC,GAAG,EAAE;IACvB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;EAC1C;EACA,MAAMI,EAAE,GAAGL,YAAY,CAACP,KAAK,CAACa,MAAM,CAAC;EACrC,MAAMC,OAAO,GAAGd,KAAK,CAACY,EAAE,CAAC,CAACG,KAAK,CAAC,EAAE,CAAC;EAEnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAACe,OAAO,CAAC;EAEzC,MAAMI,QAAQ,GAAG,IAAIC,KAAK,CAACH,IAAI,CAACH,MAAM,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC;EAEjD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGvB,QAAQ,CAACmB,QAAQ,CAAC;EAExC,MAAMK,YAAY,GAAGA,CAACP,IAAI,EAAEQ,cAAc,KAAK;IAC3C;IACA;IACA;IACA;IACA;;IAEA,MAAMC,KAAK,GAAGT,IAAI,CAACU,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK;MAClC,IAAID,EAAE,KAAKH,cAAc,EAAE;QACvBN,QAAQ,CAACU,KAAK,CAAC,GAAGJ,cAAc;MACpC;IACJ,CAAC,CAAC;IACF,OAAOC,KAAK;EAChB,CAAC;EAED,MAAMI,MAAM,GAAGN,YAAY,CAACP,IAAI,EAAE,GAAG,CAAC;EACtC,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACvBR,MAAM,CAACC,YAAY,CAACP,IAAI,EAAE,GAAG,CAAC,CAAC;EACnC,CAAC;EACDe,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnBE,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;EAErB,oBACId,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB9B,OAAA;MAAA8B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlC,OAAA;MAAK6B,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/BlC,OAAA,CAACF,YAAY;MAACc,IAAI,EAAEA,IAAK;MAACuB,SAAS,EAAElB;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5ClC,OAAA;MAAA8B,QAAA,EAAQ;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7BlC,OAAA;MAAQoC,OAAO,EAAEV,YAAa;MAAAI,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDlC,OAAA,CAACH,QAAQ;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd;AAAChC,EAAA,CA7CQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}