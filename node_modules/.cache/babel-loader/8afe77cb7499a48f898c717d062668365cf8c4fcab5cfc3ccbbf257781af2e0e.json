{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m3806\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\300\\u043A \\u0432 \\u043D\\u0430\\u043D\\u043E\\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\\u0443\\\\\\u0412\\u0438\\u0441\\u0435\\u043B\\u0438\\u0446\\u0430\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport words from \"./data/words\";\nimport Alphabet from \"./components/Alphabet\";\nimport WordByLetter from \"./components/WordByLetter\";\nimport ImgBox from \"./components/ImgBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  const id = getRandomInt(words.length);\n  const newWord = words[id];\n  const [word, setWord] = useState(newWord);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [errorCounter, setErrorCounter] = useState(0);\n  const [disabled, setDisabled] = useState(false);\n  const setWordHandler = () => {\n    setWord(words[getRandomInt(words.length)]);\n    setCorrectLetters([]);\n    setErrorCounter(0);\n    setDisabled(false);\n  };\n  console.log(word);\n  const searchLetterHandler = letter => {\n    if (word.includes(letter)) {\n      if (!correctLetters.includes(letter)) {\n        setCorrectLetters(correctLetters => [...correctLetters, letter]);\n      }\n    } else {\n      setErrorCounter(errorCounter + 1);\n    }\n  };\n  useEffect(() => {\n    if (errorCounter === 10) {\n      alert(`You lose. Word is \"${word}\"`);\n      setWordHandler();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImgBox, {\n      errorCounter: errorCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordByLetter, {\n      word: word,\n      correctLetters: correctLetters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setWordHandler,\n      children: \"Get new word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alphabet, {\n      searchLetter: searchLetterHandler,\n      disabled: disabled,\n      setDisabled: setDisabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Yq720agGSLytiMTTRaddpyxYROE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","words","Alphabet","WordByLetter","ImgBox","jsxDEV","_jsxDEV","App","_s","getRandomInt","max","Math","floor","random","id","length","newWord","word","setWord","correctLetters","setCorrectLetters","errorCounter","setErrorCounter","disabled","setDisabled","setWordHandler","console","log","searchLetterHandler","letter","includes","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","searchLetter","_c","$RefreshReg$"],"sources":["C:/Users/m3806/OneDrive/Документы/300к в наносекунду/Виселица/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport words from \"./data/words\";\nimport Alphabet from \"./components/Alphabet\";\nimport WordByLetter from \"./components/WordByLetter\";\nimport ImgBox from \"./components/ImgBox\";\n\nfunction App() {\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n    const id = getRandomInt(words.length);\n    const newWord = words[id];\n\n    const [word, setWord] = useState(newWord);\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [errorCounter, setErrorCounter] = useState(0);\n    const [disabled, setDisabled] = useState(false);\n\n    const setWordHandler = () => {\n        setWord(words[getRandomInt(words.length)]);\n        setCorrectLetters([]);\n        setErrorCounter(0);\n        setDisabled(false);\n    };\n\n    console.log(word);\n\n    const searchLetterHandler = (letter) => {\n        if (word.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n                setCorrectLetters((correctLetters) => [\n                    ...correctLetters,\n                    letter,\n                ]);\n            }\n        } else {\n            setErrorCounter(errorCounter + 1);\n        }\n    };\n\n    useEffect(() => {\n        if (errorCounter === 10) {\n            alert(`You lose. Word is \"${word}\"`);\n            setWordHandler();\n        }\n    });\n\n    return (\n        <div className=\"App\">\n            <h1>Hangman Game</h1>\n            <ImgBox errorCounter={errorCounter} />\n            <WordByLetter word={word} correctLetters={correctLetters} />\n            <button onClick={setWordHandler}>Get new word</button>\n            <Alphabet\n                searchLetter={searchLetterHandler}\n                disabled={disabled}\n                setDisabled={setDisabled}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}